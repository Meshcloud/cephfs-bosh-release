#!/bin/bash

#Set Up..
set -x
username=<%= p("cephfs.username") %>
PWD=`pwd`
user=vcap
hostname=`hostname`
ipaddr=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')
ifcace=$(ifconfig | grep encap:Ethernet | cut -d" " -f1)
firstadress='<%= (link('ceph-storage').instances.first.address) %>'
#Clear Monitor file 
rm /home/$username/.status
apt-get install jq
sudo apt-get install apt-transport-https
CLUSTERNODES='<%=
		clusternodes = link('ceph-storage').instances.map do |instance|
		{
			"name" => instance.name,
			"id" => instance.id,
			"index" => instance.index,
			"az" => instance.az,
			"address" => instance.address
		}
		end
		JSON.dump(clusternodes)
	%>' 
ADDRESSES=( $(echo $CLUSTERNODES | jq '.[] | .address') )
IDS=( $(echo $CLUSTERNODES | jq '.[] | .id') )


#Setup of Ceph Admin Node 

if [ "$ipaddr" == "$firstadress" ]; then 	
	echo "Being on Admin Host $ipaddr installing Ceph Admin tools"
	wget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add -
	echo deb https://download.ceph.com/debian/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list
	sudo apt-get update
	sudo apt-get install ceph-deploy
else 
	echo "not the admin host $ipaddr" 
fi		

#Preflight Setup of all Nodes including Admin one
##Installing SSH and establishing the Keys
echo "configuring ssh server..."
sshpubkey='<%= p("cephfs.sshpubkey") %>'

sudo apt-get install ntp
sudo apt-get install openssh-server
sudo useradd -d /home/$username -m $username
echo "$username ALL = (root) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$username
sudo chmod 0440 /etc/sudoers.d/$username
usermod -G bosh_sshers meshlab
mkdir -p /home/$username/.ssh/
touch /home/$username/.ssh/authorized_keys 
chown -R $username:$username /home/$username/.ssh
chmod 640 /home/$username/.ssh/priv.rsa && chmod 640 /home/$username/.ssh
#vcap is the user bosh uses for install scripts which needs ssh connectivity at post deployment
mkdir -p /home/vcap/.ssh/
rm /home/vcap/.ssh/config
echo "$sshpubkey" | tee /home/$username/.ssh/authorized_keys 

if [ "$ipaddr" == "$firstadress" ]; then
	echo "Adding SSH-Config..."
	#sshprivkey='<%= p("cephfs.sshprivkey") %>'
	#echo $sshprivkey | tee  /home/vcap/.ssh/priv.rsa

	chown -R vcap:vcap /home/vcap/.ssh
	mv /var/vcap/jobs/cephfs/config/certs/priv.rsa /home/vcap/.ssh/priv.rsa
	chmod 640 /home/vcap/.ssh/priv.rsa && chmod 640 /home/vcap/.ssh

	echo "Writing SSH-Config"

	for i in "${!ADDRESSES[@]}"
	do
	 echo "Host $(echo $(echo ${IDS[$i]} | sed -e 's/^"//' -e 's/"$//'))" | tee -a /home/vcap/.ssh/config 
	 echo " Hostname $(echo $(echo ${ADDRESSES[$i]} | sed -e 's/^"//' -e 's/"$//'))" | tee -a /home/vcap/.ssh/config
	 echo " User $username" | tee -a /home/vcap/.ssh/config
	 echo " IdentityFile /home/vcap/.ssh/priv.rsa" | tee -a /home/vcap/.ssh/config
	done	

	#add etc Hosts  
cat<<EOF >hosts
127.0.0.1       localhost
EOF

	for i in "${!ADDRESSES[@]}"
	do
		echo "$(echo $(echo ${ADDRESSES[$i]} | sed -e 's/^"//' -e 's/"$//'))  $(echo $(echo ${IDS[$i]} | sed -e 's/^"//' -e 's/"$//'))" | tee -a hosts
	done	


cat<<EOF >>hosts 
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF

	sudo mv hosts /etc/hosts
else
	echo "being no admin host skipping SSH Confg"
fi		

#open ports and save config
echo "Adding Routes..."
sudo apt-get install iptables-persistent
sudo iptables -A INPUT -i $iface -p tcp -s $ipaddr/255.255.255.0 --dport 6789 -j ACCEPT
sudo iptables -A INPUT -i $iface -p tcp -s $ipaddr/255.255.255.0 --dport 6800:7300 -j ACCEPT
sudo /etc/init.d/iptables-persistent save 


echo "done" | tee /home/$username/.status

exit 0



