#!/bin/bash

#Set Up..
set -x
username=<%= p("cephfs.username") %>
PWD=`pwd`
user=vcap
hostname=`hostname`
ipaddr=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')
iface=$(ifconfig | grep encap:Ethernet | cut -d" " -f1)
#Clear Monitor file 
rm /home/$username/.status
apt-get install jq
sudo apt-get install apt-transport-https

HOSTNAMES=( $(cat /var/vcap/instance/dns/records.json | jq '.record_infos | .[] | {'host':.[11], 'id':.[12]}' | jq --raw-output --slurp '.=sort_by(.id) | .[].host') )
IPADDRESSES=( $(cat /var/vcap/instance/dns/records.json | jq '.record_infos | .[] | {'ip':.[9], 'id':.[12]}' | jq --raw-output --slurp '.=sort_by(.id) | .[].ip') )

#Setup of Ceph Admin Node 

if [ "$hostname" == "${HOSTNAMES[0]}" ]; then 	
	echo "Being on Admin Host $ipaddr installing Ceph Admin tools"
	wget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add -
	echo deb https://download.ceph.com/debian/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list
	sudo apt-get update
	sudo apt-get -y install -f ceph-deploy
else 
	echo "not the admin host $ipaddr" 
fi		

#Preflight Setup of all Nodes including Admin one
##Installing SSH and establishing the Keys
echo "configuring ssh server..."
sshpubkey='<%= p("cephfs.sshpubkey") %>'

sudo apt-get install ntp
sudo apt-get install openssh-server
sudo useradd -d /home/$username -m $username
echo "$username ALL = (root) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$username
sudo chmod 0440 /etc/sudoers.d/$username
usermod -G bosh_sshers meshlab
mkdir -p /home/$username/.ssh/
touch /home/$username/.ssh/authorized_keys 
chown -R $username:$username /home/$username/.ssh
chmod 700 /home/$username/.ssh/priv.rsa && chmod 700 /home/$username/.ssh
#vcap is the user bosh uses for install scripts which needs ssh connectivity at post deployment
mkdir -p ~/.ssh/
rm ~/.ssh/config
echo "$sshpubkey" | tee /home/$username/.ssh/authorized_keys 

if [ "$hostname" == "${HOSTNAMES[0]}" ]; then
	echo "Adding SSH-Config..."

	mv /var/vcap/jobs/cephfs/config/certs/priv.rsa ~/.ssh/priv.rsa
	chmod 700 ~/.ssh/priv.rsa && chmod 700 ~/vcap/.ssh

	echo "Writing SSH-Config"

	for i in "${!HOSTNAMES[@]}"
	do
	 echo "Host ${HOSTNAMES[$i]}"  | tee -a ~/.ssh/config 
	 echo " Hostname ${IPADDRESSES[$i]}" | tee -a ~/.ssh/config
	 echo " User $username" | tee -a ~/.ssh/config
	 echo " IdentityFile ~/.ssh/priv.rsa" | tee -a ~/.ssh/config
	 echo " StrictHostKeyChecking no" | tee -a ~/.ssh/config
	done	

	#add etc Hosts  
cat<<EOF >hosts
127.0.0.1       localhost
EOF

	for i in "${!IPADDRESSES[@]}"
	do
		echo "$(echo $(echo ${IPADDRESSES[$i]} | sed -e 's/^"//' -e 's/"$//'))  $(echo $(echo ${HOSTNAMES[$i]} | sed -e 's/^"//' -e 's/"$//'))" | tee -a hosts
	done	


cat<<EOF >>hosts 
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF

	sudo mv hosts /etc/hosts
else
	echo "being no admin host skipping SSH Confg"
fi		

#open ports and save config
echo "Adding Routes..."
sudo apt-get install iptables-persistent
sudo iptables -A INPUT -i $iface -p tcp -s $ipaddr/255.255.255.0 --dport 6789 -j ACCEPT
sudo iptables -A INPUT -i $iface -p tcp -s $ipaddr/255.255.255.0 --dport 6800:7300 -j ACCEPT
sudo /etc/init.d/iptables-persistent save 


echo "done" | tee /home/$username/.status

exit 0
